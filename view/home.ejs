<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script
      src="https://code.jquery.com/jquery-3.6.0.slim.min.js"
      integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI="
      crossorigin="anonymous"
    ></script>
    <style></style>
  </head>
  <body>
    <div>
      <h2>Idle Time/Elapsed Time Calculator</h2>
      <div></div>
      <div></div>
      <form name="">
        <div id="overlayLoader">
          <div class="loader"></div>
        </div>
        <div id="dispCalcConts">
          <div class="group clearfix">
            <label>Number of Jobs</label>
            <input type="text" id="nac" onkeyup="checnum(this);" />
          </div>
          <div class="group clearfix">
            <label>Number of Machines</label>
            <input
              type="text"
              id="mac"
              onkeyup="checnum(this);tabls_creation();"
            />
          </div>
          <div class="group clearfix">
            <div id="mktbl" class="table"></div>
          </div>
          <div class="group clearfix">
            <input
              type="button"
              value="Calculate"
              onclick="sequencing_problem()"
            />
            <input type="reset" value="Reset" onclick="clear_all()" />
          </div>
          <div class="group clearfix">
            <div id="t" class="table"></div>
          </div>
        </div>
      </form>
    </div>
  </body>
  <script>
    function checnum(as) {
      var a = as.value;

      for (var x = 0; x < a.length; x++) {
        var ff = a[x];
        if (isNaN(a) || ff == " " || ff == "-") {
          a = a.substring(0, a.length - 1);
          as.value = a;
        }
      }
    }

    function tabls_creation() {
      // if something is already present then make it reset
      document.getElementById("mktbl").innerHTML = "";
      document.getElementById("t").innerHTML = "";
      //   if no of jobs is empty then this
      if ($("#nac").val() == "" || $("#mac").val() == "") {
        document.getElementById("mktbl").innerHTML = "";
        document.getElementById("t").innerHTML = "";
      } else if (
        parseFloat($("#nac").val()) > 50 ||
        parseFloat($("#mac").val()) > 50
      ) {
        alert("Jobs and Machine are out of limit");
        $("#nac").val("");
        $("#mac").val("");
      } else {
        var nac = parseFloat($("#nac").val());
        var mac = parseFloat($("#mac").val());
        // Declare variables and create the header, footer, and caption.
        var oTable = document.createElement("TABLE");
        var oTHead = document.createElement("THEAD");
        var oTBody = document.createElement("TBODY");
        var oRow, oCell;
        var i, j;

        // Declare stock data that would normally be read in from a stock Web site.
        var heading = new Array();

        heading[0] = "Jobs";
        for (i = 1; i <= mac; i++) {
          heading[i] = "Machine " + String(i);
        }

        // Insert the created elements into oTable.
        oTable.appendChild(oTHead);
        oTable.appendChild(oTBody);

        // Insert a row into the header and set its background color.
        oRow = document.createElement("TR");
        oTHead.appendChild(oRow);

        // Create and insert cells into the header row.
        for (a = 0; a <= mac; a++) {
          oCell = document.createElement("TH");
          oCell.innerHTML = heading[a];
          oRow.appendChild(oCell);
        }

        var idval;
        // Insert rows and cells into bodies.
        for (i = 0; i < nac; i++) {
          oRow = document.createElement("TR");
          oRow.setAttribute("align", "center");
          oTBody.appendChild(oRow);
          for (j = 0; j <= mac; j++) {
            oCell = document.createElement("TD");
            if (j == 0) {
              oCell.innerHTML = "Job<sub>" + (i + 1) + "</sub>";
            } else {
              idval = "mac" + String(j);
              readonly = false;
              oCell.innerHTML =
                "<input type=text size=4 id=" +
                idval +
                i +
                " " +
                readonly +
                " onkeyup=checnum(this);>";
            }
            oRow.appendChild(oCell);
          }
        }

        // Insert the table into the document tree.
        var frtb = document.getElementById("mktbl");
        frtb.appendChild(oTable);
      }
    }

    Array.prototype.min = function (comparer) {
      if (this.length === 0) return null;
      if (this.length === 1) return this[0];

      comparer = comparer || Math.min;

      var v = this[0];
      for (var i = 1; i < this.length; i++) {
        v = comparer(this[i], v);
      }

      return v;
    };

    function sequencing_problem() {
      document.getElementById("t").innerHTML = "";
      var sufi;
      var nac = $("#nac").val();

      if (nac == "") {
        alert("Enter Number of Jobs");
        $("#nac").focus();
        document.getElementById("mktbl").innerHTML = "";
        document.getElementById("t").innerHTML = "";
        return false;
      } else {
        var macA = new Array();
        var macB = new Array();
        var temA = new Array();
        var temB = new Array();
        var tempA = new Array();
        var tempB = new Array();
        for (i = 0; i < nac; i++) {
          var firs = $("#ma" + i).val();
          var secs = $("#mb" + i).val();
          if (firs == "" || secs == "") {
            alert("Enter all values in field");
            return false;
          } else {
            macA[i] = parseFloat(firs);
            macB[i] = parseFloat(secs);
            temA[i] = macA[i];
            temB[i] = macB[i];
            tempA[i] = macA[i];
            tempB[i] = macB[i];
          }
        }

        var jobs = new Array();
        var mina;
        var minb;
        var ind;
        var main = 0;
        var mbin = nac - 1;
        for (j = 0; j < nac; j++) {
          mina = temA.min();
          minb = temB.min();
          if (mina <= minb) {
            ind = temA.indexOf(mina);
            temA.splice(ind, 1);
            temB.splice(ind, 1);
            jobs[main] = tempA.indexOf(mina);
            tempA[jobs[main]] = "";
            tempB[jobs[main]] = "";
            main++;
          } else {
            ind = temB.indexOf(minb);
            temA.splice(ind, 1);
            temB.splice(ind, 1);
            jobs[mbin] = tempB.indexOf(minb);
            tempA[jobs[mbin]] = "";
            tempB[jobs[mbin]] = "";
            mbin--;
          }
        }

        var mac1in = new Array();
        var mac1out = new Array();
        var mac2in = new Array();
        var mac2out = new Array();
        var maxi;
        var sum;
        for (k = 0; k < nac; k++) {
          if (k == 0) {
            mac1in[k] = 0;
            mac1out[k] = macA[jobs[k]];
            mac2in[k] = mac1out[k];
            mac2out[k] = parseFloat(mac2in[k]) + parseFloat(macB[jobs[k]]);
            sum = mac2in[k];
          } else {
            mac1in[k] = mac1out[k - 1];
            mac1out[k] = parseFloat(mac1in[k]) + parseFloat(macA[jobs[k]]);
            if (mac1out[k] >= mac2out[k - 1]) {
              maxi = mac1out[k];
            } else {
              maxi = mac2out[k - 1];
            }
            mac2in[k] = maxi;
            mac2out[k] = parseFloat(maxi) + parseFloat(macB[jobs[k]]);
            sum = parseFloat(sum) + parseFloat(mac2in[k] - mac2out[k - 1]);
          }
        }
        var macAidle = mac2out[nac - 1] - mac1out[nac - 1];
        var macBidle = sum;

        // Declare variables and create the header, footer, and caption.
        var oTable = document.createElement("TABLE");
        var oTHead = document.createElement("THEAD");
        var oTBody = document.createElement("TBODY");
        var oRow, oCell;
        var i, j;

        // Declare stock data that would normally be read in from a stock Web site.
        var heading = new Array();

        heading[0] = "Jobs";
        heading[1] = "Machine A";
        heading[2] = "Machine B";

        // Insert the created elements into oTable.
        oTable.appendChild(oTHead);
        oTable.appendChild(oTBody);

        // Insert a row into the header and set its background color.
        oRow = document.createElement("TR");
        oTHead.appendChild(oRow);

        // Create and insert cells into the header row.
        for (a = 0; a < heading.length; a++) {
          oCell = document.createElement("TH");
          if (a != 0) {
            oCell.setAttribute("colspan", 2);
          } else {
            oCell.setAttribute("rowspan", 2);
          }
          oCell.innerHTML = heading[a];
          oRow.appendChild(oCell);
        }

        // Insert a row into the header and set its background color.
        oRow = document.createElement("TR");
        oTHead.appendChild(oRow);

        // Create and insert cells into the header row.
        for (a = 0; a < 4; a++) {
          oCell = document.createElement("TH");
          if (a % 2 == 0) {
            headval = "In";
          } else {
            headval = "Out";
          }
          oCell.innerHTML = headval;
          oRow.appendChild(oCell);
        }

        oRow = document.createElement("TR");
        oTBody.appendChild(oRow);
        oCell = document.createElement("TD");
        oCell.setAttribute("colspan", 5);
        oCell.innerHTML = "&nbsp;";
        oRow.appendChild(oCell);

        var idval;
        var vali;
        // Insert rows and cells into bodies.
        for (i = 0; i < nac; i++) {
          oRow = document.createElement("TR");
          oRow.setAttribute("align", "center");
          oTBody.appendChild(oRow);
          for (j = 0; j < 5; j++) {
            oCell = document.createElement("TD");
            if (j == 0) {
              oCell.innerHTML =
                "Job<sub>" + (parseFloat(jobs[i]) + 1) + "</sub>";
            } else if (j == 1) {
              oCell.innerHTML = mac1in[i];
            } else if (j == 2) {
              oCell.innerHTML = mac1out[i];
            } else if (j == 3) {
              oCell.innerHTML = mac2in[i];
            } else if (j == 4) {
              oCell.innerHTML = mac2out[i];
            }
            oRow.appendChild(oCell);
          }
        }

        oRow = document.createElement("TR");
        oTBody.appendChild(oRow);
        oCell = document.createElement("TD");
        oCell.setAttribute("colspan", 5);
        oCell.setAttribute("align", "center");
        oCell.innerHTML = "Total Elapsed Time is " + mac2out[nac - 1];
        oRow.appendChild(oCell);

        oRow = document.createElement("TR");
        oTBody.appendChild(oRow);
        oCell = document.createElement("TD");
        oCell.setAttribute("colspan", 5);
        oCell.setAttribute("align", "center");
        oCell.innerHTML = "Idle Time of Machine A is " + macAidle;
        oRow.appendChild(oCell);

        oRow = document.createElement("TR");
        oTBody.appendChild(oRow);
        oCell = document.createElement("TD");
        oCell.setAttribute("colspan", 5);
        oCell.setAttribute("align", "center");
        oCell.innerHTML = "Idle Time of Machine B is " + macBidle;
        oRow.appendChild(oCell);

        // Insert the table into the document tree.
        var frtb = document.getElementById("t");
        frtb.appendChild(oTable);
      }
    }

    function clear_all() {
      document.getElementById("mktbl").innerHTML = "";
      document.getElementById("t").innerHTML = "";
      $("#nac").val("");
    }
  </script>
</html>
